name: Initialisation jobs

on:
  workflow_dispatch:

jobs:
  init-state:
    runs-on: ubuntu-latest
    name: Initialise state bucket
    env:
        AWS_ACCESS_KEY_ID: ${{ secrets.S3_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.S3_SECRET_ACCESS_KEY }}
    steps:
      - name: Check bucket exists
        id: check-bucket-exists
        run: |
          exists=$(aws s3api list-buckets --endpoint-url ${{ secrets.S3_ENDPOINT }} | jq -r '.Buckets[] | select(.Name | startswith("${{ github.event.repository.name }}-state"))| .Name')
          if [ -z "$exists" ]; then
            echo "Bucket does not exist"
            echo "Safe to create new state bucket"
            exit 0
          else
            echo "Bucket exists"
            echo "Bucket name: $exists"
            echo "Remove bucket before re-initialising"
            exit 1
          fi
      - name: Set date string
        id: set-date
        run: |
          echo "DATE=$(date '+%Y-%m-%d')" >> $GITHUB_ENV
      - name: Create bucket if it does not exist
        run: |
          aws s3api create-bucket --bucket "${{ github.event.repository.name }}-state-${{ env.DATE }}" --endpoint-url ${{ secrets.S3_ENDPOINT }}
      - name: Set bucket repo variable
        run: |
          gh variable set STATE_BUCKET_NAME --repository ${{ github.event.repository.name }} --body "${{ github.event.repository.name }}-state-${{ env.DATE }}" --env S3_STATE_BUCKET_NAME
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Head bucket to check it exists
        run: |
          aws s3api head-bucket --bucket "${{ github.event.repository.name }}-state-${{ env.DATE }}" --endpoint-url ${{ secrets.S3_ENDPOINT }}
        
